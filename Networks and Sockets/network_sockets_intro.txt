The network protocol that powers the web is actually quite simple and there is built-in support in Python 
called socket which makes it very easy to make network connections and retrieve data over those sockets in a 
Python program.

A socket is much like a file, except that a single socket provides a two-way connection between two programs.
You can both read from and write to the same socket. If you write something to a socket, it is sent to the 
application at the other end of the socket. If you read from the socket, you are given the data which the other 
application has sent.

A protocol is a set of precise rules that determine who is to go first, what they are to do, and then what 
the responses are to that message, and who sends next, and so on. In a sense the two applications at either
end of the socket are doing a dance and making sure not to step on each other’s toes.


TCP(Transfer Control Protocol)


A network socket is an endpoint of an interprocess communication across a computer network. 
The Python Standard Library has a module called socket which provides a low-level internet networking interface. 
This interface is common across different programming languages since it uses OS-level system calls.

To create a socket, there is a function called socket. It accepts family, type, and proto arguments 
(see documentation for details). To create a TCP-socket, you should use socket.AF_INET or socket.AF_INET6 for family and socket.SOCK_STREAM for type.
Here’s a Python socket example:

import socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)